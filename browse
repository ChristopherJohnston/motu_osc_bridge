#!/usr/bin/env python
from zeroconf import ServiceBrowser, ServiceListener, Zeroconf, ZeroconfServiceTypes
import argparse

class MyListener(ServiceListener):

    def update_service(self, zc: Zeroconf, type_: str, name: str) -> None:
        print(f"Service {name} updated")

    def remove_service(self, zc: Zeroconf, type_: str, name: str) -> None:
        print(f"Service {name} removed")

    def add_service(self, zc: Zeroconf, type_: str, name: str) -> None:
        info = zc.get_service_info(type_, name)
        print(f"Service {name} added, service info: {info}")

def main():
    parser = argparse.ArgumentParser(
        prog='zeroconf_osc_motu_browser',
        description="Browse for zeroconf services related to OSC and MOTU devices"
    )

    parser.add_argument('--list-types', dest='list_types', action='store_true', help="List all service types")
    parser.set_defaults(list_types=False)
    args = parser.parse_args()
    
    if args.list_types:
        print("Finding ZeroConf Service Types...\n")
        print('\n'.join(ZeroconfServiceTypes.find()))

    zeroconf = Zeroconf()
    listener = MyListener()
    service_types = ["_motu-csr._udp.local.", "_http._tcp.local.", "_osc._udp.local."]

    print("\nFinding Services...")
    browser = ServiceBrowser(zeroconf, service_types, listener)
    try:
        input("Press enter to exit...\n\n")
    finally:
        zeroconf.close()


if __name__ == '__main__':
    main()